[General]
sim-time-limit = 100s
debug-on-errors = true
print-undisposed = true

cmdenv-express-mode = true
cmdenv-autoflush = true

result-dir = ./results
# Store results in SQLite database
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"

**.scalar-recording = false
**.vector-recording = false

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumo = "sumo"
*.traci.launcher.extraOptions = " --lanechange.duration 3"
*.traci.launcher.sumocfg = "intersection.sumocfg"

*.traci.ignorePersons = false
*.traci.mapper.typename = "traci.MultiTypeModuleMapper"
*.traci.mapper.basicNodeManager = "traci.nodes"
*.traci.mapper.vehicleTypes = xml \
("\
    <vehicles> \
        <vehicle type=\"artery.envmod.Car\" rate=\"0.2\" /> \
        <vehicle type=\"artery.envmod.PlainVehicle\" rate=\"0.8\" /> \
    </vehicles> \
")
*.traci.mapper.personTypes = xml \
("\
    <persons vClass=\"pedestrian\"> \
        <person type=\"artery.envmod.Person\" rate=\"0.2\" /> \
        <person type=\"artery.envmod.PlainPerson\" rate=\"0.8\" /> \
    </persons> \
")

repeat = 1
num-rngs = 3
*.traci.mapper.rng-0 = 1

*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW

*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2013-06-01 12:35:00"

network = artery.envmod.World
**.identityRegistryModule = "idRegistry"
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.node[*].middleware.services = xmldoc("services.xml")
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")

*.node[*].environmentModel.*.drawSensorCone = true
*.node[*].environmentModel.*.drawLinesOfSight = true
*.node[*].environmentModel.*.drawDetectedObjects = true
*.node[*].environmentModel.*.drawBlockingObstacles = true

*.node[*].environmentModel.FrontLongRangeRadar.fovRange = 250m
*.node[*].environmentModel.FrontLongRangeRadar.fovAngle = 18
*.node[*].environmentModel.FrontLongRangeRadar.numSegments = 6

*.node[*].environmentModel.FrontShortRangeRadar.fovRange = 100m
*.node[*].environmentModel.FrontShortRangeRadar.fovAngle = 120
*.node[*].environmentModel.FrontShortRangeRadar.numSegments = 6

*.node[*].environmentModel.RearLongRangeRadar.fovRange = 250m
*.node[*].environmentModel.RearLongRangeRadar.fovAngle = 18
*.node[*].environmentModel.RearLongRangeRadar.numSegments = 6

*.node[*].environmentModel.RearShortRangeRadar.fovRange = 100m
*.node[*].environmentModel.RearShortRangeRadar.fovAngle = 120
*.node[*].environmentModel.RearShortRangeRadar.numSegments = 6

*.node[*].environmentModel.SeeThrough.fovRange = 50m
